apiVersion: v1
kind: Namespace
metadata:
  name: kong
  labels:
    istio-injection: enabled
---
# Source: ingress/charts/controller/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong-controller
  namespace: kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
---
# Source: ingress/charts/gateway/templates/service-account.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kong-gateway
  namespace: kong
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-controller-validation-webhook-ca-keypair
  namespace:  kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
type: kubernetes.io/tls
data:
    tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUtLaTc2blNOQzhDK0NqYTArRFUwcU13RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF4TWpFMk1EQXlPVFV4V2hjTgpNelF4TWpFME1EQXlPVFV4V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOL2hCNnhzNW9iT1NGd3NGdFR6UGlqL2tPS2UKcXhsVnkzZXY3TEV0QjJYL2MrUU9uei9TL2M3N1JSb3hZSDJxclFCV0l5ckwwY0hVRWg1Q1dSMGpLWFZKaU9BVgo5OExLYjhOTHV3S2xOSDVFZG81VmpMczZKaTRVcENMY3BlcHhoaTNSZU5scGc3Vm1TU1BacXlqWlEyc3NDcmFDCmR0VXM5dGxMSXhGY1d4QnRwVWZraTFCT1ZSb0k1WTluRjRwU1ZMZ3lKaTVMRlNUTXF5UVlkdU5ua0tVNjluVXYKUTdHaGFHWWZGVnhNcHZpREkrbWlmU1lwVllFY3Y1akFsZ1FiZWdvOTBUZWFlMGNWS3FvQVlzallmRWVLNjlnVQpSdmxSQmU0a0RxNUc4RHBFeFVaOExUdHR6aTloTmpxdDdSUE1uNlYvQ3FreUJKSzZoM1BrOHlEZmZGY0NBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUWQyUVdySDRndmFsU1JpNmgyTXVPcApLTWNES1RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQW5xdVN1Q0Z5ZW5tVkZDSlpvSmdqeGxkL2FwaHp4VGg0ClNURkpaRWVUeXlRZlF4S1hPM2QvcXhaMEpRKy9SWkk5QzBURUlQWkxyZDJMdlQwUzRnTVc2VzlRWSsrREJwU3MKdDcrSURmOTNTT0ZybTBBR0lkRXNmVGpManlQaENJanZ3dkdxbnpqbWpxUlNKbUpzaXU5eTY1SXJsckRrQ2JaagoxU1FUK2tObEVlMHVqd1kxenhNK0hUcnZka0dQdGdLSnJwK3I4UWNsNWxEVnFQMzJzbXNudXdGWU53aXowbzU3ClpYTUROR0Q5bEpUM0o1T1VyODN6Q2k0T3hKOUttdnhKSXhKK3ludXJuOE41QmdPU3VlZk1nTDRKNXMvMWozUzAKZXlmcXFNdldRMW9TMlU1ckYveEpUN3c3SGE3eHU3SitXNGpOWlB3RWoyY0dKMVhLZitmeHpRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMytFSHJHem1oczVJWEN3VzFQTStLUCtRNHA2ckdWWExkNi9zc1MwSFpmOXo1QTZmClA5TDl6dnRGR2pGZ2ZhcXRBRllqS3N2UndkUVNIa0paSFNNcGRVbUk0Qlgzd3NwdncwdTdBcVUwZmtSMmpsV00KdXpvbUxoU2tJdHlsNm5HR0xkRjQyV21EdFdaSkk5bXJLTmxEYXl3S3RvSjIxU3oyMlVzakVWeGJFRzJsUitTTApVRTVWR2dqbGoyY1hpbEpVdURJbUxrc1ZKTXlySkJoMjQyZVFwVHIyZFM5RHNhRm9aaDhWWEV5bStJTWo2YUo5CkppbFZnUnkvbU1DV0JCdDZDajNSTjVwN1J4VXFxZ0JpeU5oOFI0cnIyQlJHK1ZFRjdpUU9ya2J3T2tURlJud3QKTzIzT0wyRTJPcTN0RTh5ZnBYOEtxVElFa3JxSGMrVHpJTjk4VndJREFRQUJBb0lCQUhjZ0RpMDVaUkNtQXVySQpxdjEwME1hUDlsQWZqWHRWbzRaMEhjWEk1LzdtQm94N0cxR2l1MXEvYU8yZkNIRFZ1R2hOYlRrQWF3UndDNVArClNkeXZNUWd2c0oxTUV5R2JCZzBzNXIxcG1wejFZUUFybFU2cWlsWkt0V3UzYkxGcTVyTEttenRVWWJqTVRHNi8KQzh3WWp6OGZtRE8xQi9ZMmpzTGdzREEwckYvNGVJYWRzL2V2QUhtSXgvaEw0NWEvM1VlekhjQTVkWmxOU2Rqcgp0VkxJMk5IZnBUSUJRa2pFVlBrVWtxMDQyZC9jdmRzN1ZNcnQxMkk1MWJrRlh2M2xpVmVnRFZHMTVKV3lQM0F3CkJOSCtaU0YwQ3lTTjBNRFlRZXp1UHQ1eHBhNk43eElDL1owalJ2OXRmMllWS0RqNUZ1WmdLZDVlWXdRUlpXSHIKYzY5K3NjRUNnWUVBNEpNYkc3T2ZTd1I1MEx4QXcxN0ZXNXVBUklGbnorTXZzZG1LQlVwSFBxeXNzaVRPZUYzRApGbXRwaDBBVkhGWmI3eHRGRDdOMWNCQkFVYTh4TlRzM2d5cm9takhWNlE1bGdNeDRkODhad25uT25IQnJJMFVMCmxzWnppWWNmeExibnVQL0ROYnZCTG9MTFRvYWtmcW85ZDM5bGxLY2tGUUwrOG16aEN0NnMzL3NDZ1lFQS96VUIKWXNVQ1FkOTEwUm91L2Y3R0ZqNnlNYVBLWXFqSGFXc05NYWM4RXBVUXRnQlhlOHNvUnRiOWxvM1U4U3RMc1pzRwo2MkErRVpySTMza3dTNjFRTlNWaTY5WWRjTlpEekoxMkpScEIzODF1N2lVc0lBT2JWYURuc3BNbTU1N3dpTGs2CnBMQ1d6Z3plUkpZY1BLNjdmNHFtaHNHdmZVRzFTWmhPQ25uYStsVUNnWUFQTCtPVmJBQkp3bk82ZWdDbk5iR0QKRUhFTU1QUWtTdWplemlkWFZENmRMbkEvVzkzYXBmeWJkNGdiYldvQUVKY0hCSUVYSHJ2Q2FGYnhMemZVc2J4LwpVbGVJbGZZeFhKZmdyZk0zcHZuRy9SWEwzbzVnUkRzVVp6ZEpCYXBRVTA0NFpKTisvc09Cc2JhdUNNejNBK3hFCk9JbFdGRGVNZERkcGpaTnFlTVNZSVFLQmdERkNuL1BhcHliajVTL3BaK3lyQXIxRWVNelFHcjZVYVhsVnFvUk4KRFhGZ3lJcjQ0ZW9KT3NzQnNJMGc3MXRseWdTTU1mZTQ2Z0luNkdJS1dHSWpIL3BDTHlmcWVtQlBXMkxoZWU2TApkTytvRGFOMkZXQlFrZWtqVjlYR1Jab3J1YTRLWXVGckhKREZOeG55QjUxRzlQWVhZekZiclczMkF2SWpyZHlqCnpMckpBb0dBVjYzRHI2NlMzUHhyNE5rU2JhUWdrQUZPQ0o4SmMxK2xjZFhNMHNFVnNhZWF5eEJjVGdVNVdOOWoKbk0raUh0WmdJNXUvNDE3UDdWSFd6eE5OV0FNbmYwNThoWi8wdm80ZU9IK05zcm02Tkt4NW04YmZZb0pOZ3FTZQpOUy91REprR0dxOU9zc0xybjJWcEhLSEFKV3NKL0JNSFNudXh0d3BCMFBJbkpUYUVtVXc9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
apiVersion: v1
kind: Secret
metadata:
  name: kong-controller-validation-webhook-keypair
  namespace:  kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
type: kubernetes.io/tls
data:
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURkakNDQWw2Z0F3SUJBZ0lRZE04ZkpTbW9kNlI3enAydjlUWkRPVEFOQmdrcWhraUc5dzBCQVFzRkFEQWMKTVJvd0dBWURWUVFERXhGcmIyNW5MV0ZrYldsemMybHZiaTFqWVRBZUZ3MHlOREV5TVRZd01ESTVOVEphRncwegpOREV5TVRRd01ESTVOVEphTURZeE5EQXlCZ05WQkFNVEsydHZibWN0WTI5dWRISnZiR3hsY2kxMllXeHBaR0YwCmFXOXVMWGRsWW1odmIyc3VhMjl1Wnk1emRtTXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUsKQW9JQkFRQ3dFRHRMWFZWYzAxMEdhaFk5eWt5Z1JGV1h3L2t4Y2RURVJmQmRXL1ZNcjM4Mzc1SmVGSFRRejlMaQpMOWQ5NkxNR096TnRFbktxdmRnNjlRQmhmOUM4WUhXekFoeFMwemVOWHRSaTZmMkxFTEVkaW55Wk4wUVNRMHltCnFMUmxTVkdIOFR5Z09obTcxakdQeG15OUMrK0NZVHZ4MjZDNXRtUzE4SEJySHJZak42YjNrdXJURzVRMXNXU1QKVmtSTktjVGNKSmNIeXhnbHFTcjl0U0pTbGxPZ3VKYmtyME9GMW14ejRKcUxIWnpRbUhBS3p3Nk1ieVJGWGM0OAp4Y1JUelpHNDNOKy9NajRuc1V4RVFTQk9MdnJOTjRoRmFWNmliRmVFQ2FlSXhFc0RSTFg2OU1CeGdCdldkblJ4Ci9qbWJTZ09BNXFtRmNVd0s0WXlZYnBFRjdVcXZBZ01CQUFHamdaa3dnWll3RGdZRFZSMFBBUUgvQkFRREFnV2cKTUIwR0ExVWRKUVFXTUJRR0NDc0dBUVVGQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4RwpBMVVkSXdRWU1CYUFGQjNaQmFzZmlDOXFWSkdMcUhZeTQ2a294d01wTURZR0ExVWRFUVF2TUMyQ0sydHZibWN0ClkyOXVkSEp2Ykd4bGNpMTJZV3hwWkdGMGFXOXVMWGRsWW1odmIyc3VhMjl1Wnk1emRtTXdEUVlKS29aSWh2Y04KQVFFTEJRQURnZ0VCQUV3VUZraEgzSklZVmQwUE5VR3RjRHhxRHMvRXlrVElMeFhmTVNlU3lxMkN1bW1DTHJISgpEMGJOTFh2NkFwbERCRmVYRWVOVXAxYWpxeXladi9MWm5ZRFlleWMzR1hmSTljZXNLeWxzeC85QzZiOHc4SlEzCmdLazhKcWhYaUJzRnk3bHRHd21ubytGeFcxQmNmVjAyM3p0Mm1Wa3VVaTM5cXQrUnE4NDNwbWtXbDBCV0NvUFcKbG9RU0lXOWI4MDdlMjNhTUx0NVVrQm1Zb00wTmtXc1lWWG5yYzY1RjdWTzY4aWVuZzVHRUhPeWJOdk9pN3QragpCTGlSandKTFNtTENFSlp5YndWZzJ6KzZGai9ncDliUmV3TURZeS9ucFVTQ2V3TG44NHhiKys4STVTbjVkTVowCktGNWxiNW8wTzdCK2xUZmJiUXdQRUVOOXRzU1J6YTcwU1FrPQotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBc0JBN1MxMVZYTk5kQm1vV1BjcE1vRVJWbDhQNU1YSFV4RVh3WFZ2MVRLOS9OKytTClhoUjAwTS9TNGkvWGZlaXpCanN6YlJKeXFyM1lPdlVBWVgvUXZHQjFzd0ljVXRNM2pWN1VZdW45aXhDeEhZcDgKbVRkRUVrTk1wcWkwWlVsUmgvRThvRG9adTlZeGo4WnN2UXZ2Z21FNzhkdWd1YlprdGZCd2F4NjJJemVtOTVMcQoweHVVTmJGa2sxWkVUU25FM0NTWEI4c1lKYWtxL2JVaVVwWlRvTGlXNUs5RGhkWnNjK0NhaXgyYzBKaHdDczhPCmpHOGtSVjNPUE1YRVU4MlJ1TnpmdnpJK0o3Rk1SRUVnVGk3NnpUZUlSV2xlb214WGhBbW5pTVJMQTBTMSt2VEEKY1lBYjFuWjBjZjQ1bTBvRGdPYXBoWEZNQ3VHTW1HNlJCZTFLcndJREFRQUJBb0lCQUNYOStxMlNvRjc5aFM5agpLUldBVi9TbGlrckxrVFJvT2Q5NHNCdVZRbU9mNHpYd3pvYmFwektBQmlPazZ6MVNQMzl5dXZBb2NQSURNV3ZYCmZwT0xmMEdIRng3ZnI3ajN0eDhjZlh3eXZmR0tVbzNyV21POWwwVFJuUExCcU52S2JIdUhST3ZXWGNNNHYwMGwKSmtYTkU0dnc2M3lQUmltTkFFSjZkZWZIb3NvS1ZqcGV0RDRwcmJKTkFvdFZ4V3lGeFh4S0hIbXN2R3ZXOWhTZApSY1JmTDVtcUpHRXFNc3ZoMmY1MmtGeHVYblBlbFpmM2pTRXBYQU0xT25mNWh3YzM5ZHcvNUVBcngxeWZhQ0lhCmlxZklhdTI2Qlp5TTA1UERXd3hyd0hWNEVHellKQjhjRVcxTjZNS0F4bXRKd1BzNkVSK01CNCtFOTRHWjlMcmoKMGNrMGRxRUNnWUVBNnBPaG1FQWNLeTA2MXRCL1g1ZTU4WDJFTnlHRnUrOHlTc3ZtVmFWSHpwaWZyWXJXcUtOVApsK01ZSE94bnI5ZlpQR1hQWm9HbFRieVJoVE9jL0JOclVuZkJZSTZwbTllTW95VzZRdzMyRjQ2eEpJZWVMSXgxClhCckdsNnp1b2kwdkdRTUpRZGtsZVNadmQ0MkY0ZmxCT1pjWnpDWERKQUpXZ2F1bzZXMFMzWGNDZ1lFQXdDU1IKZzk1Z1ZONGdxWHkrQ3liODRJdi9aWlpoN0hDZWw5M0EycDgrQXROc3ducnRJaTJ5Q3ZtTVRldkd0VnVRekRMNAppbUREdkFYSjV0UUM5NFZNZUFUTHNaV3dFYUk5ampFeUt6cVhWT0w3eHBHTFZFQjg0d042T0tPSEQrU3FHdmtBCnFnMHljcG5Yc0Q4N0hibURDMFRWUG50TGFLOE9XVysvdmJ4SzZva0NnWUFzYUl5RUhVYjM2WlVsQzgzQlZDRVEKbGJtTkVseVdDcCtUeDJ3d3RKeVdnUkJoczFJV0ZPMkRhS3VzOWhoZkV0YitkeXUvZFRYTk5MQzc3ZHgvWUZIRwpDQVBrK3IwalVyZytQcXMzZkpJbFBZOU5vaHNReGZxRjJFL1djUmV3UGl1WGFacThDNWJyaTVvNG9PTkN0NFJnCm1ibDVpNENZOVpSWThoMkZLM0FSMndLQmdCWEpUN0tiR1dNbUdKLy9JL0ZSeDJTU215L2lvRkhWNXpXakVFWDUKdm1kRm45UmhhZGZ4UkhuWUY5K1I5Mk1DOGVVbGRtY0NWODlPL0xpdW0zT0Rhc3RGQisrbjRHSHZlbmxQL0xkSQpHbmFta2hQTzF2U0RwMlY2TkhhTm5EZmlIcU9XVGt2NTJSbURkaUJtMndZZ3pjb09VUHVYc1ZJNlh5OG02NS9RCjVORzVBb0dBZUxSNDFUYkxOWWtISnh1NmRwNFpqUnpQVnFEdC9PdE04V2pqZHd1Yk1LWHdqaHhCeFJPemFRQnQKSys4WUZVblBLLzc3RnJQNzZnblR0V1BRMHRya0dXZTBxWndrcFpQNHdkN2E3MkpkV2F2QkFOMDJLNkdhdWliUApnaGZTa3F0aWVEUmRBOXkrMUNLa1YxM3A4M3NSNkFYU1lkbndiOU10OGhXSnNKcG5ncDA9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
  name: kong-controller
rules:

- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongcustomentities/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongupstreampolicies/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumergroups/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - ingressclassparameterses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongconsumers/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - tcpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - udpingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways
  verbs:
  - get
  - list
  - update
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gateways/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - httproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - referencegrants
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - referencegrants/status
  verbs:
  - get
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tcproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tcproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tlsroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - tlsroutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - udproutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - udproutes/status
  verbs:
  - get
  - update
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - grpcroutes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - grpcroutes/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch

- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - konglicenses/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongvaults/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - configuration.konghq.com
  resources:
  - kongclusterplugins/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - gateway.networking.k8s.io
  resources:
  - gatewayclasses/status
  verbs:
  - get
  - update
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - get
  - list
  - watch
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kong-controller
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kong-controller
subjects:
  - kind: ServiceAccount
    name: kong-controller
    namespace: kong
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kong-controller
  namespace: kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - pods
      - secrets
      - namespaces
    verbs:
      - get
  - apiGroups:
      - ""
    resources:
      - configmaps
    resourceNames:
      # Defaults to "<election-id>-<ingress-class>"
      # Here: "<kong-ingress-controller-leader-nginx>-<nginx>"
      # This has to be adapted if you change either parameter
      # when launching the nginx-ingress-controller.
      - "kong-ingress-controller-leader-kong-kong"
    verbs:
      - get
      - update
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
  # Begin KIC 2.x leader permissions
  - apiGroups:
      - ""
      - coordination.k8s.io
    resources:
      - configmaps
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - get
---
# Source: ingress/charts/controller/templates/controller-rbac-resources.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kong-controller
  namespace: kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kong-controller
subjects:
  - kind: ServiceAccount
    name: kong-controller
    namespace: kong
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-controller-validation-webhook
  namespace: kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
spec:
  ports:
  - name: webhook
    port: 443
    protocol: TCP
    targetPort: webhook
  selector:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
    app.kubernetes.io/component: app
---
# Source: ingress/charts/controller/templates/controller-service-metrics.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-controller-metrics
  namespace: kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
spec:
  ports:
  - name: cmetrics
    port: 10255
    protocol: TCP
    targetPort: cmetrics
  - name: status
    port: 10254
    protocol: TCP
    targetPort: cstatus
  selector:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
    app.kubernetes.io/component: app
---
# Source: ingress/charts/gateway/templates/service-kong-admin.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-gateway-admin
  namespace: kong
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
spec:
  type: ClusterIP
  ports:
  - name: kong-admin-tls
    port: 8444
    targetPort: 8444
    protocol: TCP
  clusterIP: None
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong"
---
# Source: ingress/charts/gateway/templates/service-kong-manager.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-gateway-manager
  namespace: kong
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
spec:
  type: NodePort
  ports:
  - name: kong-manager
    port: 8002
    targetPort: 8002
    protocol: TCP
  - name: kong-manager-tls
    port: 8445
    targetPort: 8445
    protocol: TCP
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong"
---
# Source: ingress/charts/gateway/templates/service-kong-proxy.yaml
apiVersion: v1
kind: Service
metadata:
  name: kong-gateway-proxy
  namespace: kong
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
    enable-metrics: "true"
spec:
  type: LoadBalancer
  ports:
  - name: kong-proxy
    port: 80
    targetPort: 8000
    protocol: TCP
  - name: kong-proxy-tls
    port: 443
    targetPort: 8443
    protocol: TCP
  selector:
    app.kubernetes.io/name: gateway
    app.kubernetes.io/component: app
    app.kubernetes.io/instance: "kong"
---
# Source: ingress/charts/controller/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-controller
  namespace:  kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: controller
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "kong"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: kong-controller-token
        kuma.io/gateway: "enabled"
        traffic.kuma.io/exclude-outbound-ports: "8444"
        traffic.sidecar.istio.io/excludeOutboundPorts: "8444"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: controller
        helm.sh/chart: controller-2.45.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.8"
        app.kubernetes.io/component: app
        app: kong-controller
        
        version: "3.8"
    spec:
      serviceAccountName: kong-controller
      automountServiceAccountToken: false
      
      containers:
      - name: ingress-controller
        securityContext:
      
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        args:
        
        ports:
        - name: webhook
          containerPort: 8080
          protocol: TCP
        - name: cmetrics
          containerPort: 10255
          protocol: TCP
        - name: cstatus
          containerPort: 10254
          protocol: TCP
        env:
        - name: POD_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.name
        - name: POD_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace  
        
        
        
        
        
        
        - name: CONTROLLER_ADMISSION_WEBHOOK_LISTEN
          value: "0.0.0.0:8080"
        - name: CONTROLLER_ELECTION_ID
          value: "kong-ingress-controller-leader-kong"
        - name: CONTROLLER_INGRESS_CLASS
          value: "kong"
        - name: CONTROLLER_KONG_ADMIN_SVC
          value: "kong/kong-gateway-admin"
        - name: CONTROLLER_KONG_ADMIN_TLS_SKIP_VERIFY
          value: "true"
        - name: CONTROLLER_PUBLISH_SERVICE
          value: "kong/kong-gateway-proxy"
        
        image: kong/kubernetes-ingress-controller:3.3
        imagePullPolicy: IfNotPresent
      
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /readyz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /healthz
            port: 10254
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {}
        volumeMounts:
        - name: webhook-cert
          mountPath: /admission-webhook
          readOnly: true
        - name: kong-controller-token
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
          readOnly: true
        
        
       
      securityContext:
        {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kong-controller-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: kong-controller-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: kong-controller-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
        - name: webhook-cert
          secret:
            secretName: kong-controller-validation-webhook-keypair
---
# Source: ingress/charts/gateway/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kong-gateway
  namespace:  kong
  labels:
    app.kubernetes.io/name: gateway
    helm.sh/chart: gateway-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
    app.kubernetes.io/component: app
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: gateway
      app.kubernetes.io/component: app
      app.kubernetes.io/instance: "kong"

  template:
    metadata:
      annotations:
        kuma.io/service-account-token-volume: kong-gateway-token
        kuma.io/gateway: "enabled"
        traffic.sidecar.istio.io/includeInboundPorts: ""
      labels:
        app.kubernetes.io/name: gateway
        helm.sh/chart: gateway-2.45.0
        app.kubernetes.io/instance: "kong"
        app.kubernetes.io/managed-by: "Helm"
        
        app.kubernetes.io/version: "3.8"
        app.kubernetes.io/component: app
        app: kong-gateway
        
        version: "3.8"
    spec:
      serviceAccountName: kong-gateway
      automountServiceAccountToken: false
      
      initContainers:
      - name: clear-stale-pid
        image: kong:3.8
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        resources:
          {}
        command:
        - "rm"
        - "-vrf"
        - "$KONG_PREFIX/pids"
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROLE
          value: "traditional"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        
        volumeMounts:
        - name: kong-gateway-prefix-dir
          mountPath: /kong_prefix/
        - name: kong-gateway-tmp
          mountPath: /tmp
      containers:
      - name: "proxy"
        image: kong:3.8
        imagePullPolicy: IfNotPresent
        securityContext:
        
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          seccompProfile:
            type: RuntimeDefault
        env:
         
        
        
        - name: KONG_ADMIN_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_GUI_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_ADMIN_GUI_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ADMIN_LISTEN
          value: "0.0.0.0:8444 http2 ssl, [::]:8444 http2 ssl"
        - name: KONG_CLUSTER_LISTEN
          value: "off"
        - name: KONG_DATABASE
          value: "off"
        - name: KONG_LUA_PACKAGE_PATH
          value: "/opt/?.lua;/opt/?/init.lua;;"
        - name: KONG_NGINX_WORKER_PROCESSES
          value: "2"
        - name: KONG_PORTAL_API_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PORTAL_API_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PORT_MAPS
          value: "80:8000, 443:8443"
        - name: KONG_PREFIX
          value: "/kong_prefix/"
        - name: KONG_PROXY_ACCESS_LOG
          value: "/dev/stdout"
        - name: KONG_PROXY_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_PROXY_LISTEN
          value: "0.0.0.0:8000, [::]:8000, 0.0.0.0:8443 http2 ssl, [::]:8443 http2 ssl"
        - name: KONG_PROXY_STREAM_ACCESS_LOG
          value: "/dev/stdout basic"
        - name: KONG_PROXY_STREAM_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_ROLE
          value: "traditional"
        - name: KONG_ROUTER_FLAVOR
          value: "traditional"
        - name: KONG_STATUS_ACCESS_LOG
          value: "off"
        - name: KONG_STATUS_ERROR_LOG
          value: "/dev/stderr"
        - name: KONG_STATUS_LISTEN
          value: "0.0.0.0:8100, [::]:8100"
        - name: KONG_STREAM_LISTEN
          value: "off"
        - name: KONG_NGINX_DAEMON
          value: "off"
        
        lifecycle:
          preStop:
            exec:
              command:
              - kong
              - quit
              - --wait=15
        ports:
        - name: admin-tls
          containerPort: 8444
          protocol: TCP
        - name: proxy
          containerPort: 8000
          protocol: TCP
        - name: proxy-tls
          containerPort: 8443
          protocol: TCP
        - name: status
          containerPort: 8100
          protocol: TCP
        volumeMounts:
          - name: kong-gateway-prefix-dir
            mountPath: /kong_prefix/
          - name: kong-gateway-tmp
            mountPath: /tmp
          
        readinessProbe:
          failureThreshold: 3
          httpGet:
            path: /status/ready
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        livenessProbe:
          failureThreshold: 3
          httpGet:
            path: /status
            port: status
            scheme: HTTP
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 5
        resources:
          {} 
      securityContext:
        {}
      terminationGracePeriodSeconds: 30
      volumes:
        - name: kong-gateway-prefix-dir
          emptyDir:
            sizeLimit: 256Mi
        - name: kong-gateway-tmp
          emptyDir:
            sizeLimit: 1Gi
        - name: kong-gateway-token
          projected:
            sources:
            - serviceAccountToken:
                expirationSeconds: 3607
                path: token
            - configMap:
                items:
                - key: ca.crt
                  path: ca.crt
                name: kube-root-ca.crt
            - downwardAPI:
                items:
                - fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
                  path: namespace
---
# Source: ingress/charts/controller/templates/ingress-class.yaml
apiVersion: networking.k8s.io/v1
kind: IngressClass
metadata:
  name: kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
spec:
  controller: ingress-controllers.konghq.com/kong
---
# Source: ingress/charts/controller/templates/admission-webhook.yaml
kind: ValidatingWebhookConfiguration
apiVersion: admissionregistration.k8s.io/v1
metadata:
  name: kong-controller-validations
  namespace: kong
  labels:
    app.kubernetes.io/name: controller
    helm.sh/chart: controller-2.45.0
    app.kubernetes.io/instance: "kong"
    app.kubernetes.io/managed-by: "Helm"
    
    app.kubernetes.io/version: "3.8"
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUtLaTc2blNOQzhDK0NqYTArRFUwcU13RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF4TWpFMk1EQXlPVFV4V2hjTgpNelF4TWpFME1EQXlPVFV4V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOL2hCNnhzNW9iT1NGd3NGdFR6UGlqL2tPS2UKcXhsVnkzZXY3TEV0QjJYL2MrUU9uei9TL2M3N1JSb3hZSDJxclFCV0l5ckwwY0hVRWg1Q1dSMGpLWFZKaU9BVgo5OExLYjhOTHV3S2xOSDVFZG81VmpMczZKaTRVcENMY3BlcHhoaTNSZU5scGc3Vm1TU1BacXlqWlEyc3NDcmFDCmR0VXM5dGxMSXhGY1d4QnRwVWZraTFCT1ZSb0k1WTluRjRwU1ZMZ3lKaTVMRlNUTXF5UVlkdU5ua0tVNjluVXYKUTdHaGFHWWZGVnhNcHZpREkrbWlmU1lwVllFY3Y1akFsZ1FiZWdvOTBUZWFlMGNWS3FvQVlzallmRWVLNjlnVQpSdmxSQmU0a0RxNUc4RHBFeFVaOExUdHR6aTloTmpxdDdSUE1uNlYvQ3FreUJKSzZoM1BrOHlEZmZGY0NBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUWQyUVdySDRndmFsU1JpNmgyTXVPcApLTWNES1RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQW5xdVN1Q0Z5ZW5tVkZDSlpvSmdqeGxkL2FwaHp4VGg0ClNURkpaRWVUeXlRZlF4S1hPM2QvcXhaMEpRKy9SWkk5QzBURUlQWkxyZDJMdlQwUzRnTVc2VzlRWSsrREJwU3MKdDcrSURmOTNTT0ZybTBBR0lkRXNmVGpManlQaENJanZ3dkdxbnpqbWpxUlNKbUpzaXU5eTY1SXJsckRrQ2JaagoxU1FUK2tObEVlMHVqd1kxenhNK0hUcnZka0dQdGdLSnJwK3I4UWNsNWxEVnFQMzJzbXNudXdGWU53aXowbzU3ClpYTUROR0Q5bEpUM0o1T1VyODN6Q2k0T3hKOUttdnhKSXhKK3ludXJuOE41QmdPU3VlZk1nTDRKNXMvMWozUzAKZXlmcXFNdldRMW9TMlU1ckYveEpUN3c3SGE3eHU3SitXNGpOWlB3RWoyY0dKMVhLZitmeHpRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kong-controller-validation-webhook
      namespace: kong
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.credentials.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: "konghq.com/credential"
      operator: "Exists"
    - key: "konghq.com/credential"
      operator: "NotIn"
      values:
      - "konnect"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- admissionReviewVersions:
  - v1
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUtLaTc2blNOQzhDK0NqYTArRFUwcU13RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF4TWpFMk1EQXlPVFV4V2hjTgpNelF4TWpFME1EQXlPVFV4V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOL2hCNnhzNW9iT1NGd3NGdFR6UGlqL2tPS2UKcXhsVnkzZXY3TEV0QjJYL2MrUU9uei9TL2M3N1JSb3hZSDJxclFCV0l5ckwwY0hVRWg1Q1dSMGpLWFZKaU9BVgo5OExLYjhOTHV3S2xOSDVFZG81VmpMczZKaTRVcENMY3BlcHhoaTNSZU5scGc3Vm1TU1BacXlqWlEyc3NDcmFDCmR0VXM5dGxMSXhGY1d4QnRwVWZraTFCT1ZSb0k1WTluRjRwU1ZMZ3lKaTVMRlNUTXF5UVlkdU5ua0tVNjluVXYKUTdHaGFHWWZGVnhNcHZpREkrbWlmU1lwVllFY3Y1akFsZ1FiZWdvOTBUZWFlMGNWS3FvQVlzallmRWVLNjlnVQpSdmxSQmU0a0RxNUc4RHBFeFVaOExUdHR6aTloTmpxdDdSUE1uNlYvQ3FreUJKSzZoM1BrOHlEZmZGY0NBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUWQyUVdySDRndmFsU1JpNmgyTXVPcApLTWNES1RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQW5xdVN1Q0Z5ZW5tVkZDSlpvSmdqeGxkL2FwaHp4VGg0ClNURkpaRWVUeXlRZlF4S1hPM2QvcXhaMEpRKy9SWkk5QzBURUlQWkxyZDJMdlQwUzRnTVc2VzlRWSsrREJwU3MKdDcrSURmOTNTT0ZybTBBR0lkRXNmVGpManlQaENJanZ3dkdxbnpqbWpxUlNKbUpzaXU5eTY1SXJsckRrQ2JaagoxU1FUK2tObEVlMHVqd1kxenhNK0hUcnZka0dQdGdLSnJwK3I4UWNsNWxEVnFQMzJzbXNudXdGWU53aXowbzU3ClpYTUROR0Q5bEpUM0o1T1VyODN6Q2k0T3hKOUttdnhKSXhKK3ludXJuOE41QmdPU3VlZk1nTDRKNXMvMWozUzAKZXlmcXFNdldRMW9TMlU1ckYveEpUN3c3SGE3eHU3SitXNGpOWlB3RWoyY0dKMVhLZitmeHpRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kong-controller-validation-webhook
      namespace: kong
  failurePolicy: Ignore
  matchPolicy: Equivalent
  name: secrets.plugins.validation.ingress-controller.konghq.com
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
    - key: "konghq.com/credential"
      operator: "NotIn"
      values:
      - "konnect"
  rules:
  - apiGroups:
    - ""
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - secrets
  sideEffects: None
- name: validations.kong.konghq.com
  matchPolicy: Equivalent
  objectSelector:
    matchExpressions:
    - key: owner
      operator: NotIn
      values:
      - helm
  failurePolicy: Ignore
  sideEffects: None
  admissionReviewVersions: ["v1beta1"]
  rules:
  - apiGroups:
    - configuration.konghq.com
    apiVersions:
    - '*'
    operations:
    - CREATE
    - UPDATE
    resources:
    - kongconsumers
    - kongplugins
    - kongclusterplugins
    - kongingresses
  - apiGroups:
    - ''
    apiVersions:
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - services
  - apiGroups:
    - networking.k8s.io
    apiVersions:
      - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - ingresses
  - apiGroups:
    - gateway.networking.k8s.io
    apiVersions:
    - 'v1alpha2'
    - 'v1beta1'
    - 'v1'
    operations:
    - CREATE
    - UPDATE
    resources:
    - gateways
    - httproutes
  clientConfig:
    caBundle: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURKRENDQWd5Z0F3SUJBZ0lSQUtLaTc2blNOQzhDK0NqYTArRFUwcU13RFFZSktvWklodmNOQVFFTEJRQXcKSERFYU1CZ0dBMVVFQXhNUmEyOXVaeTFoWkcxcGMzTnBiMjR0WTJFd0hoY05NalF4TWpFMk1EQXlPVFV4V2hjTgpNelF4TWpFME1EQXlPVFV4V2pBY01Sb3dHQVlEVlFRREV4RnJiMjVuTFdGa2JXbHpjMmx2YmkxallUQ0NBU0l3CkRRWUpLb1pJaHZjTkFRRUJCUUFEZ2dFUEFEQ0NBUW9DZ2dFQkFOL2hCNnhzNW9iT1NGd3NGdFR6UGlqL2tPS2UKcXhsVnkzZXY3TEV0QjJYL2MrUU9uei9TL2M3N1JSb3hZSDJxclFCV0l5ckwwY0hVRWg1Q1dSMGpLWFZKaU9BVgo5OExLYjhOTHV3S2xOSDVFZG81VmpMczZKaTRVcENMY3BlcHhoaTNSZU5scGc3Vm1TU1BacXlqWlEyc3NDcmFDCmR0VXM5dGxMSXhGY1d4QnRwVWZraTFCT1ZSb0k1WTluRjRwU1ZMZ3lKaTVMRlNUTXF5UVlkdU5ua0tVNjluVXYKUTdHaGFHWWZGVnhNcHZpREkrbWlmU1lwVllFY3Y1akFsZ1FiZWdvOTBUZWFlMGNWS3FvQVlzallmRWVLNjlnVQpSdmxSQmU0a0RxNUc4RHBFeFVaOExUdHR6aTloTmpxdDdSUE1uNlYvQ3FreUJKSzZoM1BrOHlEZmZGY0NBd0VBCkFhTmhNRjh3RGdZRFZSMFBBUUgvQkFRREFnS2tNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQVBCZ05WSFJNQkFmOEVCVEFEQVFIL01CMEdBMVVkRGdRV0JCUWQyUVdySDRndmFsU1JpNmgyTXVPcApLTWNES1RBTkJna3Foa2lHOXcwQkFRc0ZBQU9DQVFFQW5xdVN1Q0Z5ZW5tVkZDSlpvSmdqeGxkL2FwaHp4VGg0ClNURkpaRWVUeXlRZlF4S1hPM2QvcXhaMEpRKy9SWkk5QzBURUlQWkxyZDJMdlQwUzRnTVc2VzlRWSsrREJwU3MKdDcrSURmOTNTT0ZybTBBR0lkRXNmVGpManlQaENJanZ3dkdxbnpqbWpxUlNKbUpzaXU5eTY1SXJsckRrQ2JaagoxU1FUK2tObEVlMHVqd1kxenhNK0hUcnZka0dQdGdLSnJwK3I4UWNsNWxEVnFQMzJzbXNudXdGWU53aXowbzU3ClpYTUROR0Q5bEpUM0o1T1VyODN6Q2k0T3hKOUttdnhKSXhKK3ludXJuOE41QmdPU3VlZk1nTDRKNXMvMWozUzAKZXlmcXFNdldRMW9TMlU1ckYveEpUN3c3SGE3eHU3SitXNGpOWlB3RWoyY0dKMVhLZitmeHpRPT0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
    service:
      name: kong-controller-validation-webhook
      namespace: kong

